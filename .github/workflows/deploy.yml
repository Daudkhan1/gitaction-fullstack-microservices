name: CI/CD with Microservices (Frontend and Backend)

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'

env:
  IMAGE_NAME_FRONTEND: frontend-app
  IMAGE_NAME_BACKEND: backend-app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🧠 Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: 🐳 Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 📦 Build and Push Frontend Docker image
        if: contains(github.event.head_commit.message, 'frontend') || !(contains(github.event.head_commit.message, 'frontend') || contains(github.event.head_commit.message, 'backend'))
        run: |
          docker buildx create --use || true
          docker buildx build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME_FRONTEND:$IMAGE_TAG \
            --push ./frontend

      - name: 📦 Build and Push Backend Docker image
        if: contains(github.event.head_commit.message, 'backend') || !(contains(github.event.head_commit.message, 'frontend') || contains(github.event.head_commit.message, 'backend'))
        run: |
          docker buildx create --use || true
          docker buildx build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME_BACKEND:$IMAGE_TAG \
            --push ./backend

      - name: 🔐 Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: 🚀 Deploy to EC2 (Conditional Microservice Deployment)
        run: |
          echo "🔍 Debugging image reference"
          echo "Frontend image: ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME_FRONTEND:$IMAGE_TAG"
          echo "Backend image: ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME_BACKEND:$IMAGE_TAG"
          
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} <<'EOF'
            set -e
            echo "🚀 Running Deployment Script on EC2"
            echo "Commit Message: $GITHUB_REF"

            if [[ "$GITHUB_REF" == *"frontend"* ]]; then
              echo "🔁 Deploying Frontend only"
              docker rm -f frontend-app || true
              docker run -d --name frontend-app -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME_FRONTEND:$IMAGE_TAG

            elif [[ "$GITHUB_REF" == *"backend"* ]]; then
              echo "🔁 Deploying Backend only"
              docker rm -f backend-app || true
              docker run -d --name backend-app -p 5000:5000 ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME_BACKEND:$IMAGE_TAG

            else
              echo "🔁 Deploying BOTH Frontend and Backend"
              docker rm -f frontend-app || true
              docker run -d --name frontend-app -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME_FRONTEND:$IMAGE_TAG

              docker rm -f backend-app || true
              docker run -d --name backend-app -p 5000:5000 ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME_BACKEND:$IMAGE_TAG
            fi
            docker ps -a
          EOF
